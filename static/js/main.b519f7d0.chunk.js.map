{"version":3,"sources":["redux/reducers/array.js","redux/reducers/searchNum.js","redux/reducers/maxValue.js","redux/reducers/arrayBars.js","redux/reducers/sortedStatus.js","redux/reducers/count.js","program/Algorithms/binary.js","program/Algorithms/jump.js","program/Algorithms/fibonacci.js","program/Components/Functions/animations.js","program/Components/Functions/colorReset.js","program/Components/Functions/randomNum.js","program/Components/Functions/reset.js","program/Components/Header/slider/slider.jsx","program/Components/Header/header.jsx","program/Algorithms/linear.js","program/Components/body/Bars/Bars.jsx","program/Components/body/body.jsx","App.js","reportWebVitals.js","redux/store.js","font.js","index.js"],"names":["arraySlice","createSlice","name","initialState","reducers","setArray","state","payload","actions","searchSlice","setNum","maxSlice","setMax","barsSlice","setBars","sortedSlice","setSortedStatus","countSlice","comparisonCount","incrementCount","resetCount","getBinarySearchAnimations","array","searchNumber","animations","length","start","end","middle","Math","floor","push","doBinary","getJumpSearchAnimations","n","step","round","sqrt","blockStart","currentStep","min","doJump","getFibonacciSearchAnimations","fibMMm2","fibMMm1","fibM","offset","i","doFibonacci","searchAnimation","speed","ms","Promise","resolve","setTimeout","then","barStyle","document","getElementsByClassName","style","color","backgroundColor","colorReset","bars","randomNum","max","random","resetArray","auxArray","theme","createTheme","direction","useStyles","makeStyles","slider","padding","spacing","fontSize","handleChange","event","value","ReverseSlider","classes","className","ThemeProvider","width","Slider","defaultValue","size","track","onChange","Header","this","props","arrayBars","mainArray","doLinear","getLinearSearchAnimations","displayComparisons","sortArray","arraySort","maxValue","COUNT","counter","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","align","Button","onClick","reset","component","textAlign","linearSearch","fibonacciSearch","binarySearch","jumpSearch","refreshSearch","Component","connect","sortedStatus","slice","sort","a","b","Resize","realBars","useSelector","dispatch","useDispatch","useState","window","innerHeight","innerWidth","setSize","useEffect","addEventListener","handleResize","removeEventListener","useWindowSize","height","maxCalc","barsCalc","update","sorted","heightUpdate","temp","arrayResize","map","idx","Body","includes","searchNumberCheck","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","arrayReducer","searchNum","count","typography","fontFamily","join","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.b519f7d0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const arraySlice = createSlice({\r\n  name: 'array',\r\n  initialState:[],\r\n  reducers: {\r\n    setArray: (state,  { payload } ) => {\r\n      return payload;\r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const { setArray } = arraySlice.actions\r\n\r\nexport default arraySlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const searchSlice = createSlice({\r\n    name: 'searchNum',\r\n    initialState: 0,\r\n    reducers: {\r\n      setNum: (state, {payload}) => {\r\n        return payload\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { setNum } = searchSlice.actions\r\n\r\n  export default searchSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const maxSlice = createSlice({\r\n    name: 'maxValue',\r\n    initialState: 730,\r\n    reducers: {\r\n      setMax: (state, {payload}) => {\r\n        return payload\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { setMax } = maxSlice.actions\r\n\r\n  export default maxSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const barsSlice = createSlice({\r\n    name: 'arrayBars',\r\n    initialState: 310,\r\n    reducers: {\r\n      setBars: (state, {payload}) => {\r\n        return payload\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { setBars } = barsSlice.actions\r\n\r\n  export default barsSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const sortedSlice = createSlice({\r\n    name: 'sortedStatus',\r\n    initialState: false,\r\n    reducers: {\r\n      setSortedStatus: (state, {payload}) => {\r\n        return payload\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { setSortedStatus } = sortedSlice.actions\r\n\r\n  export default sortedSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const countSlice = createSlice({\r\n    name: 'count ',\r\n    initialState: {\r\n        comparisonCount: 0,\r\n    },\r\n    reducers: {\r\n      incrementCount: state => {\r\n        state.comparisonCount += 1;\r\n      },\r\n      resetCount: state =>{\r\n        state.comparisonCount = 0;\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { incrementCount, resetCount } = countSlice.actions;\r\n\r\n\r\n\r\n  export default countSlice.reducer","export function getBinarySearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <=1) return array; \r\n    doBinary(array,animations,searchNumber)\r\n    return animations; \r\n  }\r\n  \r\n  function doBinary(\r\n    array,\r\n    animations,\r\n    searchNumber,\r\n  )\r\n  {\r\n    let start = 0;\r\n    let end = array.length - 1;\r\n  \r\n    while (start <= end) {\r\n        let middle = Math.floor((start + end) / 2);\r\n        animations.push([middle]);\r\n  \r\n        if (array[middle] === searchNumber) {\r\n           return animations;\r\n        } else if (array[middle] < searchNumber) {\r\n            start = middle + 1;\r\n        } else {\r\n            end = middle - 1;\r\n        }\r\n    }\r\n    return animations;\r\n  \r\n  }","export function getJumpSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doJump(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doJump(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n    let n = array.length;\r\n    const step = Math.round(Math.sqrt(n));\r\n  \r\n      let blockStart = 0, currentStep = step;\r\n  \r\n      while (array[Math.min(currentStep, n) - 1] < searchNumber)\r\n      {\r\n          blockStart = currentStep;\r\n          currentStep += step;\r\n      animations.push([blockStart])\r\n  \r\n          if (blockStart >= n)\r\n              return animations;\r\n      }\r\n    animations.push([Math.min(currentStep, n) - 1])\r\n  \r\n      while (array[blockStart] < searchNumber)\r\n      {\r\n      animations.push([blockStart])\r\n          blockStart++;\r\n  \r\n          if (blockStart === Math.min(currentStep, n))\r\n              return animations;\r\n      }\r\n  \r\n      if (array[blockStart] === searchNumber){\r\n          return animations\r\n    }\r\n      else{\r\n          return animations;\r\n    }\r\n  \r\n  }","export function getFibonacciSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doFibonacci(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doFibonacci(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n  let n = array.length;\r\n  let fibMMm2 = 0; \r\n  let fibMMm1 = 1; \r\n  let fibM = fibMMm2 + fibMMm1;\r\n  \r\n  while (fibM < n)\r\n  {\r\n      fibMMm2 = fibMMm1;\r\n      fibMMm1 = fibM;\r\n      fibM = fibMMm2 + fibMMm1;\r\n  }\r\n  \r\n  let offset = -1;\r\n  \r\n  \r\n  while (fibM > 1)\r\n  {\r\n      \r\n      let i = Math.min(offset + fibMMm2, n-1);\r\n      animations.push([i]);\r\n  \r\n      if (array[i] < searchNumber)\r\n      {\r\n          fibM = fibMMm1;\r\n          fibMMm1 = fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n          offset = i;\r\n      }\r\n  \r\n      else if (array[i] > searchNumber)\r\n      {\r\n          fibM = fibMMm2;\r\n          fibMMm1 = fibMMm1 - fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n      }\r\n  \r\n      else{\r\n        return animations;\r\n      }\r\n  }\r\n  \r\n  if(fibMMm1 && array[n-1] === searchNumber){\r\n    animations.push([n-1]);\r\n    return animations\r\n  }\r\n  \r\n  return animations;\r\n  \r\n  \r\n  }","import '../body/body.css';\r\n\r\nconst HIGHLIGHT = 'orange'; \r\nconst SEARCH_COLOR = '#2AFF00';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function searchAnimation(animations,speed){\r\n  sleep(200)\r\n  .then(()=>{\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const barIdx = animations[i];\r\n      const barStyle = arrayBars[barIdx].style;\r\n      const color = i+1 === animations.length ? SEARCH_COLOR : SECONDARY_COLOR;\r\n\r\n      setTimeout(()=>{\r\n        barStyle.backgroundColor = HIGHLIGHT;\r\n        setTimeout(()=>{\r\n          barStyle.backgroundColor = color;\r\n        },speed);\r\n      },i* speed);\r\n    }\r\n  })\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","const PRIMARY_COLOR = 'black';\r\n\r\nexport function colorReset(bars){\r\n\r\n    for(let i = 0;i < bars;i++){\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const barStyle = arrayBars[i].style;\r\n  \r\n      barStyle.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n  \r\n  }\r\n  ","export function randomNum(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }","import { randomNum } from \"./randomNum\";\r\n\r\nexport function resetArray(max,bars) {\r\n    const auxArray = [];\r\n    for (let i = 0; i < bars; i++) {\r\n      auxArray.push(randomNum(1, max))\r\n    }\r\n    return auxArray;\r\n}\r\n","import React from \"react\";\r\nimport { Slider,Box} from \"@material-ui/core\";\r\nimport { createTheme, ThemeProvider, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport var speed = 200;\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  direction: \"rtl\",\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  slider:{\r\n    padding: theme.spacing(2),\r\n    fontSize: 14\r\n  },\r\n}));\r\n\r\n\r\nfunction handleChange(event,value){\r\n  speed = value; \r\n}\r\n\r\n\r\n\r\n\r\nfunction ReverseSlider () {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className ={classes.slider}>\r\n    <ThemeProvider theme={theme} >\r\n      <Box width = {200} >\r\n        ANIMATION SPEED\r\n        <Slider \r\n          defaultValue={200}\r\n          min={10}\r\n          max={1000}\r\n          size =\"medium\"\r\n          track=\"inverted\"\r\n          style={{color:'rgb(211,211,211)'}}\r\n          onChange= {handleChange}\r\n        >\r\n        </Slider>\r\n      </Box>\r\n      </ThemeProvider>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ReverseSlider;\r\n\r\n","import React, { Component} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { setArray } from '../../../redux/reducers/array';\r\nimport { setNum } from '../../../redux/reducers/searchNum';\r\nimport { setMax } from '../../../redux/reducers/maxValue';\r\nimport { setBars } from '../../../redux/reducers/arrayBars';\r\nimport { setSortedStatus } from '../../../redux/reducers/sortedStatus';\r\nimport { incrementCount, resetCount} from '../../../redux/reducers/count';\r\nimport { getBinarySearchAnimations } from '../../Algorithms/binary.js';\r\nimport {getLinearSearchAnimations} from '../../Algorithms/linear.js'\r\nimport {getJumpSearchAnimations} from '../../Algorithms/jump.js';\r\nimport {getFibonacciSearchAnimations} from '../../Algorithms/fibonacci.js';\r\nimport {searchAnimation} from '../Functions/animations.js'\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { connect } from 'react-redux';\r\nimport ReverseSlider from './slider/slider';\r\nimport { speed } from './slider/slider';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  linearSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayBars-1);\r\n    const animations = getLinearSearchAnimations(this.props.array,this.props.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n  \r\n  fibonacciSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayBars-1);\r\n    this.sortArray();\r\n    let animations = getFibonacciSearchAnimations(arraySort(this.props.array),this.props.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n\r\n  jumpSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayBars-1);\r\n    this.sortArray();\r\n    let animations = getJumpSearchAnimations(arraySort(this.props.array), this.props.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n\r\n  binarySearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayBars-1);\r\n    this.sortArray();\r\n    let animations  = getBinarySearchAnimations(arraySort(this.props.array), this.props.searchNumber)\r\n    searchAnimation(animations, speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n\r\n  displayComparisons(animations){\r\n    for(let i =0;i<animations;i++){\r\n      setTimeout(()=>{\r\n        setTimeout(()=>{\r\n          this.props.incrementCount();\r\n        },speed)\r\n      },i*speed)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  reset(){\r\n    colorReset(this.props.arrayBars-1);\r\n    this.props.setArray(resetArray(this.props.maxValue,this.props.arrayBars));\r\n    this.props.setSortedStatus(false);\r\n    setTimeout(()=>{\r\n      this.props.setNum(this.props.array[randomNum(0,this.props.arrayBars-1)]);\r\n    })\r\n  }\r\n\r\n\r\n  refreshSearch(){\r\n    this.props.setNum(this.props.array[randomNum(0,this.props.arrayBars-1)]);\r\n  }\r\n\r\n  sortArray(){\r\n    this.props.setArray(arraySort(this.props.array));\r\n    this.props.setSortedStatus(true);\r\n  }\r\n\r\n\r\n  render(){\r\n    let COUNT = this.props.counter.comparisonCount;\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"body2\" align=\"left\">\r\n            <Button color=\"inherit\" onClick = {()=> this.reset()}>refresh array</Button>\r\n            <Button color = \"inherit\" onClick = {()=> this.sortArray()}> sort array</Button>\r\n            COMPARISONS: {COUNT}\r\n            </Typography>\r\n            <Typography />\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1}}  textAlign = \"cente\" align=\"center\">\r\n            <Button color=\"inherit\" onClick = {()=> this.linearSearch()}>linear</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.fibonacciSearch()}>fibonacci</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.binarySearch()}>binary</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.jumpSearch()}>jump</Button>\r\n            </Typography>\r\n            <ReverseSlider />\r\n            <Typography variant =\"caption\" align=\"right\">\r\n            <Button color=\"inherit\" onClick = {()=> this.refreshSearch()}>refresh search number</Button>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    array: state.array,\r\n    searchNumber: state.searchNumber,\r\n    maxValue: state.maxValue,\r\n    arrayBars: state.arrayBars,\r\n    sortedStatus: state.sortedStatus,\r\n    counter: state.counter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n return {\r\n   setArray,\r\n   setNum,\r\n   setBars,\r\n   setMax,\r\n   setSortedStatus,\r\n   incrementCount,\r\n   resetCount,\r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Header)\r\n\r\nfunction  arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}","export function getLinearSearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    doLinear(array,animations,searchNumber);\r\n    return animations;\r\n  }\r\n  \r\n  function doLinear(\r\n    mainArray,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n   for(let i = 0; i < mainArray.length;i++){\r\n     if(mainArray[i] === searchNumber){\r\n       animations.push([i]);\r\n       return animations\r\n     }\r\n     else\r\n     {\r\n       animations.push([i]);\r\n      }\r\n      \r\n   }\r\n   return animations\r\n  \r\n  }","import React, {useState, useEffect} from \"react\";\r\nimport { setBars } from \"../../../../redux/reducers/arrayBars\";\r\nimport { setArray } from '../../../../redux/reducers/array'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { randomNum } from \"../../Functions/randomNum\";\r\nimport '../body.css'\r\n\r\nconst PRIMARY_COLOR = 'black';\r\n\r\n\r\nfunction useWindowSize(){\r\n  const [size,setSize] = useState([window.innerHeight, window.innerWidth])\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth])\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize)\r\n  }, []);\r\n  return size; \r\n}\r\n\r\nfunction barsCalc(width){\r\n  const arrayLength = Math.floor(width/4.15);\r\n  return arrayLength;\r\n}\r\n\r\nfunction maxCalc(height){\r\n  var max = Math.floor(height/1.25);\r\n  if (max>730)max = 730;\r\n  return max;\r\n}\r\n\r\nfunction arrayResize(length,array,max,sorted,heightUpdate){\r\n    var auxArray = []; \r\n    const start = array.length+1; \r\n    if(array.length === 0)return array;\r\n    if(length>array.length){\r\n        auxArray = [...array];\r\n        for(let i =start-1;i<length-1;i++){\r\n          const temp = randomNum(5,max);\r\n          auxArray.push([temp]);\r\n        }\r\n    }else{\r\n        for(let i = 0;i<length;i++){\r\n          auxArray.push(array[i]);\r\n        }\r\n    }\r\n\r\n    if(sorted === true){\r\n      return arraySort(auxArray);\r\n    } else return auxArray;\r\n}\r\n\r\nfunction Resize(){\r\n\r\n  const realBars = useSelector((state)=>state.arrayBars);\r\n  const dispatch = useDispatch();\r\n  const [height,width] = useWindowSize();\r\n  const max = maxCalc(height);\r\n  const bars = barsCalc(width);\r\n  var update = false;\r\n  const sorted = useSelector((state)=> state.sortedStatus);\r\n\r\n  useEffect(()=>{\r\n    if(realBars !== bars) dispatch(setBars(bars));\r\n  })\r\n  const array = arrayResize(bars,useSelector((state)=> state.array),max,sorted);\r\n\r\n  if(array.length !== useSelector((state)=> state.array.length)){\r\n    update = true;\r\n  }else{update = false}\r\n\r\n\r\n  useEffect(()=>{\r\n    if(update === true){\r\n      dispatch(setArray(array));\r\n    }\r\n  })\r\n  return(\r\n      <>\r\n      {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: PRIMARY_COLOR,\r\n                  height: `${value}px`,\r\n                }}>&nbsp;</div>\r\n            ))}\r\n      </>\r\n  )\r\n}\r\n\r\n\r\nexport default Resize\r\n\r\nfunction  arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}","import React, {Component} from 'react';\r\nimport './body.css';\r\nimport { connect } from 'react-redux';\r\nimport { setArray } from '../../../redux/reducers/array';\r\nimport { setNum } from '../../../redux/reducers/searchNum';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { setBars } from '../../../redux/reducers/arrayBars';\r\nimport { setMax } from '../../../redux/reducers/maxValue';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport Resize from './Bars/Bars';\r\n\r\nclass Body extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setArray(resetArray(this.props.maxValue,this.props.arrayBars));\r\n    setTimeout(()=>{\r\n      this.searchNumber();\r\n    },100)\r\n  } \r\n\r\n\r\n\r\n\r\n  searchNumber(){\r\n    this.props.setNum(this.props.array[randomNum(0,this.props.arrayBars-1)]);\r\n  }\r\n\r\n  searchNumberCheck(){\r\n    if(this.props.array.length === 0) return;\r\n    if(this.props.searchNumber === 0) return;\r\n    if(!this.props.array.includes(this.props.searchNumber))\r\n    {\r\n      this.searchNumber();\r\n      colorReset(this.props.arrayBars);\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    setTimeout(()=>{\r\n      this.searchNumberCheck();\r\n    },100)\r\n    return      (\r\n      <div className =\"hero-body\">\r\n        <div className= \"container\">\r\n          <Resize />\r\n      </div>\r\n     </div>\r\n\r\n    );\r\n  }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n   return {\r\n     array: state.array,\r\n     searchNumber: state.searchNumber,\r\n     arrayBars: state.arrayBars,\r\n     maxValue: state.maxValue\r\n   }\r\n }\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    setArray,\r\n    setNum,\r\n    setBars,\r\n    setMax\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Body)\r\n","import './App.css';\nimport Header from './program/Components/Header/header';\nimport Body from './program/Components/body/body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore} from \"@reduxjs/toolkit\";\r\nimport arrayReducer from \"./reducers/array\";\r\nimport searchNum from \"./reducers/searchNum\";\r\nimport maxValue from \"./reducers/maxValue\";\r\nimport arrayBars from \"./reducers/arrayBars\";\r\nimport sortedStatus from \"./reducers/sortedStatus\";\r\nimport count from \"./reducers/count\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        array: arrayReducer,\r\n        searchNumber: searchNum,\r\n        arrayBars: arrayBars,\r\n        maxValue: maxValue,\r\n        sortedStatus: sortedStatus,\r\n        counter: count,\r\n    }\r\n});","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n    typography:{\r\n        fontFamily:['\"Open Sans\"', 'sans-serif'].join(',')\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport theme from './font.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n      <ThemeProvider theme={theme}>\n      <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}