{"version":3,"sources":["redux/reducers/arrayInfo.js","redux/reducers/count.js","program/Algorithms/binary.js","program/Algorithms/jump.js","program/Algorithms/fibonacci.js","program/Algorithms/interpolation.js","program/Components/Functions/animations.js","program/Components/Functions/colorReset.js","program/Components/Functions/randomNum.js","program/Components/Functions/reset.js","program/Components/Header/slider/slider.jsx","program/Components/Header/header.jsx","program/Algorithms/linear.js","program/Components/body/Bars/Bars.jsx","program/Components/body/body.jsx","App.js","reportWebVitals.js","redux/store.js","font.js","index.js"],"names":["arrayInfoSlice","createSlice","name","initialState","arrayLength","height","array","searchNumber","sorted","reducers","setLength","state","payload","setHeight","setArray","setSearchNumber","setSortedStatus","actions","countSlice","comparisonCount","incrementCount","resetCount","getBinarySearchAnimations","animations","length","start","end","middle","Math","floor","push","doBinary","getJumpSearchAnimations","n","step","sqrt","blockStart","currentStep","min","doJump","getFibonacciSearchAnimations","fibMMm2","fibMMm1","fibM","offset","i","doFibonacci","getInterpolationSearchAnimations","current","found","console","log","doInterpolation","searchAnimation","speed","ms","Promise","resolve","setTimeout","then","barStyle","document","getElementsByClassName","style","color","backgroundColor","colorReset","bars","randomNum","max","random","resetArray","auxArray","theme","createTheme","direction","useStyles","makeStyles","slider","padding","spacing","fontSize","handleChange","event","value","ReverseSlider","classes","className","ThemeProvider","width","sx","display","xs","md","Slider","defaultValue","size","track","onChange","Header","this","props","arrayInfo","mainArray","doLinear","getLinearSearchAnimations","displayComparisons","sortArray","arraySort","COUNT","counter","Box","flexGrow","AppBar","position","Toolbar","Typography","variant","align","Button","onClick","reset","component","textAlign","linearSearch","fibonacciSearch","binarySearch","jumpSearch","interpolationSearch","refreshSearch","Component","connect","slice","sort","a","b","Resize","realBars","useSelector","dispatch","useDispatch","useState","window","innerHeight","innerWidth","setSize","useEffect","addEventListener","handleResize","removeEventListener","useWindowSize","maxCalc","barsCalc","update","heightUpdate","temp","arrayResize","map","idx","Body","searchNumberCheck","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","count","typography","fontFamily","join","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.23b99350.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const arrayInfoSlice = createSlice({\r\n    name: 'arrayInfo',\r\n    initialState: {\r\n        arrayLength: 310,\r\n        height: 730,\r\n        array: [],\r\n        searchNumber: 0,\r\n        sorted: false,\r\n    },\r\n    reducers: {\r\n      setLength: (state, {payload}) => {\r\n        state.arrayLength = payload;\r\n      },\r\n      setHeight: (state, {payload}) => {\r\n        state.height = payload; \r\n      },\r\n      setArray: (state, {payload}) => {\r\n          state.array = payload;\r\n      },\r\n      setSearchNumber: (state, {payload}) => {\r\n        state.searchNumber = payload; \r\n      },\r\n      setSortedStatus: (state, {payload}) => {\r\n          state.sorted = payload; \r\n      },\r\n    },\r\n  })\r\n\r\nexport const { setLength, setHeight, setArray, setSearchNumber, setSortedStatus } = arrayInfoSlice.actions\r\n\r\nexport default arrayInfoSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const countSlice = createSlice({\r\n    name: 'count ',\r\n    initialState: {\r\n        comparisonCount: 0,\r\n    },\r\n    reducers: {\r\n      incrementCount: state => {\r\n        state.comparisonCount += 1;\r\n      },\r\n      resetCount: state =>{\r\n        state.comparisonCount = 0;\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { incrementCount, resetCount } = countSlice.actions;\r\n\r\n\r\n\r\n  export default countSlice.reducer","export function getBinarySearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <=1) return array; \r\n    doBinary(array,animations,searchNumber)\r\n    return animations; \r\n  }\r\n  \r\n  function doBinary(\r\n    array,\r\n    animations,\r\n    searchNumber,\r\n  )\r\n  {\r\n    let start = 0;\r\n    let end = array.length - 1;\r\n  \r\n    while (start <= end) {\r\n        let middle = Math.floor((start + end) / 2);\r\n        animations.push([middle]);\r\n  \r\n        if (array[middle] === searchNumber) {\r\n           return animations;\r\n        } else if (array[middle] < searchNumber) {\r\n            start = middle + 1;\r\n        } else {\r\n            end = middle - 1;\r\n        }\r\n    }\r\n    return animations;\r\n  \r\n  }","export function getJumpSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doJump(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doJump(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n    let n = array.length;\r\n    const step = Math.floor(Math.sqrt(n));\r\n  \r\n      let blockStart = 0, currentStep = step;\r\n  \r\n      while (array[Math.min(currentStep, n) - 1] < searchNumber)\r\n      {\r\n          blockStart = currentStep;\r\n          currentStep += step;\r\n      animations.push([blockStart])\r\n  \r\n          if (blockStart >= n)\r\n              return animations;\r\n      }\r\n    animations.push([Math.min(currentStep, n) - 1])\r\n  \r\n      while (array[blockStart] < searchNumber)\r\n      {\r\n          blockStart++;\r\n          animations.push([blockStart])\r\n  \r\n          if (blockStart === Math.min(currentStep, n))\r\n              return animations;\r\n      }\r\n  \r\n      if (array[blockStart] === searchNumber){\r\n          return animations\r\n    }\r\n      else{\r\n          return animations;\r\n    }\r\n  \r\n  }","export function getFibonacciSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doFibonacci(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doFibonacci(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n  let n = array.length;\r\n  let fibMMm2 = 0; \r\n  let fibMMm1 = 1; \r\n  let fibM = fibMMm2 + fibMMm1;\r\n  \r\n  while (fibM < n)\r\n  {\r\n      fibMMm2 = fibMMm1;\r\n      fibMMm1 = fibM;\r\n      fibM = fibMMm2 + fibMMm1;\r\n  }\r\n  \r\n  let offset = -1;\r\n  \r\n  \r\n  while (fibM > 1)\r\n  {\r\n      \r\n      let i = Math.min(offset + fibMMm2, n-1);\r\n      animations.push([i]);\r\n  \r\n      if (array[i] < searchNumber)\r\n      {\r\n          fibM = fibMMm1;\r\n          fibMMm1 = fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n          offset = i;\r\n      }\r\n  \r\n      else if (array[i] > searchNumber)\r\n      {\r\n          fibM = fibMMm2;\r\n          fibMMm1 = fibMMm1 - fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n      }\r\n  \r\n      else{\r\n        return animations;\r\n      }\r\n  }\r\n  \r\n  if(fibMMm1 && array[n-1] === searchNumber){\r\n    animations.push([n-1]);\r\n    return animations\r\n  }\r\n  \r\n  return animations;\r\n  \r\n  \r\n  }","export function getInterpolationSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doInterpolation(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n\r\nfunction doInterpolation(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n)\r\n{\r\n    let current;\r\n    let length = array.length-1; \r\n    let start = 0; \r\n    let found = false; \r\n\r\n    if(0<= length && searchNumber >= array[start] && searchNumber <= array[length]){\r\n\r\n        while(!found){\r\n            current = start + Math.floor(((length-start) /(array[length]-array[start])) * (searchNumber-array[start]));\r\n            animations.push([current]);\r\n            console.log(\"current comparison = \", array[current])\r\n    \r\n            if(searchNumber === array[current]) \r\n            {\r\n            console.log(\"found\")\r\n            found = true; \r\n            return animations;\r\n            }\r\n\r\n    \r\n            if(array[current] < searchNumber) start = current+1;\r\n            if(array[current] > searchNumber) length = current-1; \r\n\r\n        }\r\n\r\n    }\r\n\r\n}","import '../body/body.css';\r\n\r\nconst HIGHLIGHT = 'orange'; \r\nconst SEARCH_COLOR = '#2AFF00';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport function searchAnimation(animations,speed){\r\n  sleep(200)\r\n  .then(()=>{\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const barIdx = animations[i];\r\n      const barStyle = arrayBars[barIdx].style;\r\n      const color = i+1 === animations.length ? SEARCH_COLOR : SECONDARY_COLOR;\r\n\r\n      setTimeout(()=>{\r\n        barStyle.backgroundColor = HIGHLIGHT;\r\n        setTimeout(()=>{\r\n          barStyle.backgroundColor = color;\r\n        },speed);\r\n      },i* speed);\r\n    }\r\n  })\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","const PRIMARY_COLOR = 'black';\r\n\r\nexport function colorReset(bars){\r\n\r\n    for(let i = 0;i < bars;i++){\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const barStyle = arrayBars[i].style;\r\n  \r\n      barStyle.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n  \r\n  }\r\n  ","export function randomNum(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }","import { randomNum } from \"./randomNum\";\r\n\r\nexport function resetArray(max,bars) {\r\n    const auxArray = [];\r\n    for (let i = 0; i < bars; i++) {\r\n      auxArray.push(randomNum(1, max))\r\n    }\r\n    return auxArray;\r\n}\r\n","import React from \"react\";\r\nimport { Slider,Box} from \"@material-ui/core\";\r\nimport { createTheme, ThemeProvider, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport var speed = 200;\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  direction: \"rtl\",\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  slider:{\r\n    padding: theme.spacing(2),\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\n\r\nfunction handleChange(event,value){\r\n  speed = value; \r\n}\r\n\r\n\r\n\r\n\r\nfunction ReverseSlider () {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className ={classes.slider}>\r\n    <ThemeProvider theme={theme} >\r\n      <Box width = {200} sx={{display: {xs: 'none', md: 'block'}}}>\r\n        ANIMATION SPEED\r\n        <Slider \r\n          defaultValue={200}\r\n          min={10}\r\n          max={1000}\r\n          size =\"medium\"\r\n          track=\"inverted\"\r\n          style={{color:'rgb(211,211,211)'}}\r\n          onChange= {handleChange}\r\n        >\r\n        </Slider>\r\n      </Box>\r\n      </ThemeProvider>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ReverseSlider;\r\n\r\n","import React, { Component} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { setArray, setSortedStatus, setSearchNumber } from '../../../redux/reducers/arrayInfo';\r\nimport { incrementCount, resetCount} from '../../../redux/reducers/count';\r\nimport { getBinarySearchAnimations } from '../../Algorithms/binary.js';\r\nimport {getLinearSearchAnimations} from '../../Algorithms/linear.js'\r\nimport {getJumpSearchAnimations} from '../../Algorithms/jump.js';\r\nimport {getFibonacciSearchAnimations} from '../../Algorithms/fibonacci.js';\r\nimport { getInterpolationSearchAnimations } from '../../Algorithms/interpolation';\r\nimport {searchAnimation} from '../Functions/animations.js'\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { connect } from 'react-redux';\r\nimport ReverseSlider from './slider/slider';\r\nimport { speed } from './slider/slider';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  linearSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    const animations = getLinearSearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n  \r\n  fibonacciSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.sortArray();\r\n    let animations = getFibonacciSearchAnimations(arraySort(this.props.arrayInfo.array),this.props.arrayInfo.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n\r\n  jumpSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.sortArray();\r\n    let animations = getJumpSearchAnimations(arraySort(this.props.arrayInfo.array), this.props.arrayInfo.searchNumber)\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n\r\n  binarySearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.sortArray();\r\n    let animations  = getBinarySearchAnimations(arraySort(this.props.arrayInfo.array), this.props.arrayInfo.searchNumber)\r\n    searchAnimation(animations, speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n  \r\n  interpolationSearch(){\r\n    this.props.resetCount();\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.sortArray();\r\n    let animations = getInterpolationSearchAnimations(arraySort(this.props.arrayInfo.array), this.props.arrayInfo.searchNumber);\r\n    searchAnimation(animations,speed);\r\n    this.displayComparisons(animations.length)\r\n  }\r\n  displayComparisons(animations){\r\n    for(let i =0;i<animations;i++){\r\n      setTimeout(()=>{\r\n        setTimeout(()=>{\r\n          this.props.incrementCount();\r\n        },speed)\r\n      },i*speed)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  reset(){\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.props.setArray(resetArray(this.props.arrayInfo.height,this.props.arrayInfo.arrayLength));\r\n    this.props.setSortedStatus(false);\r\n    setTimeout(()=>{\r\n      this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n    })\r\n  }\r\n\r\n  refreshSearch(){\r\n    this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n  }\r\n\r\n  sortArray(){\r\n    this.props.setArray(arraySort(this.props.arrayInfo.array));\r\n    this.props.setSortedStatus(true);\r\n  }\r\n\r\n\r\n  render(){\r\n    let COUNT = this.props.counter.comparisonCount;\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"body2\" align=\"left\">\r\n            <Button color=\"inherit\" onClick = {()=> this.reset()}>refresh array</Button>\r\n            <Button color = \"inherit\" onClick = {()=> this.sortArray()}> sort array</Button>\r\n            </Typography>\r\n            <Typography>\r\n            <Box sx={{fontSize: 14, display: {xs: 'none', md:'block'}}}>\r\n            COMPARISONS: {COUNT}\r\n            </Box>\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1}}  textAlign = \"cente\" align=\"center\">\r\n            <Button color=\"inherit\" onClick = {()=> this.linearSearch()}>linear</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.fibonacciSearch()}>fibonacci</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.binarySearch()}>binary</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.jumpSearch()}>jump</Button>\r\n            <Button color=\"inherit\" onClick = {()=> this.interpolationSearch()}>interpolation</Button>\r\n            </Typography>\r\n            <ReverseSlider />\r\n            <Typography variant =\"caption\" align=\"right\">\r\n            <Button color=\"inherit\" onClick = {()=> this.refreshSearch()}>refresh search number</Button>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n    arrayInfo: state.arrayInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n return {\r\n   setArray,\r\n   setSearchNumber,\r\n   setSortedStatus,\r\n   incrementCount,\r\n   resetCount,\r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Header)\r\n\r\nfunction  arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}","export function getLinearSearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    doLinear(array,animations,searchNumber);\r\n    return animations;\r\n  }\r\n  \r\n  function doLinear(\r\n    mainArray,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n   for(let i = 0; i < mainArray.length;i++){\r\n     if(mainArray[i] === searchNumber){\r\n       animations.push([i]);\r\n       return animations\r\n     }\r\n     else\r\n     {\r\n       animations.push([i]);\r\n      }\r\n      \r\n   }\r\n   return animations\r\n  \r\n  }","import React, {useState, useEffect} from \"react\";\r\nimport { setLength, setArray } from \"../../../../redux/reducers/arrayInfo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { randomNum } from \"../../Functions/randomNum\";\r\nimport '../body.css'\r\n\r\nconst PRIMARY_COLOR = 'black';\r\n\r\n\r\nfunction useWindowSize(){\r\n  const [size,setSize] = useState([window.innerHeight, window.innerWidth])\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth])\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize)\r\n  }, []);\r\n  return size; \r\n}\r\n\r\nfunction barsCalc(width){\r\n  const arrayLength = Math.floor(width/4.15);\r\n  return arrayLength;\r\n}\r\n\r\nfunction maxCalc(height){\r\n  var max = Math.floor(height/1.25);\r\n  if (max>730)max = 730;\r\n  return max;\r\n}\r\n\r\nfunction arrayResize(length,array,max,sorted,heightUpdate){\r\n    var auxArray = []; \r\n    const start = array.length+1; \r\n    if(array.length === 0)return array;\r\n    if(length>array.length){\r\n        auxArray = [...array];\r\n        for(let i =start-1;i<length-1;i++){\r\n          const temp = randomNum(5,max);\r\n          auxArray.push([temp]);\r\n        }\r\n    }else{\r\n        for(let i = 0;i<length;i++){\r\n          auxArray.push(array[i]);\r\n        }\r\n    }\r\n\r\n    if(sorted === true){\r\n      return arraySort(auxArray);\r\n    } else return auxArray;\r\n}\r\n\r\nfunction Resize(){\r\n\r\n  const realBars = useSelector((state)=>state.arrayInfo.arrayLength);\r\n  const dispatch = useDispatch();\r\n  const [height,width] = useWindowSize();\r\n  const max = maxCalc(height);\r\n  const bars = barsCalc(width);\r\n  var update = false;\r\n  const sorted = useSelector((state)=> state.arrayInfo.sorted);\r\n\r\n  const array = arrayResize(bars,useSelector((state)=> state.arrayInfo.array),max,sorted);\r\n\r\n  if(array.length !== useSelector((state)=> state.arrayInfo.array.length)){\r\n    update = true;\r\n  }else{update = false}\r\n\r\n\r\n  useEffect(()=>{\r\n    if(realBars !== bars) dispatch(setLength(bars));\r\n    if(update === true){\r\n      dispatch(setArray(array));\r\n    }\r\n  })\r\n  return(\r\n      <>\r\n      {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: PRIMARY_COLOR,\r\n                  height: `${value}px`,\r\n                }}>&nbsp;</div>\r\n            ))}\r\n      </>\r\n  )\r\n}\r\n\r\n\r\nexport default Resize\r\n\r\nfunction  arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}","import React, {Component} from 'react';\r\nimport './body.css';\r\nimport { connect } from 'react-redux';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport { setArray, setSearchNumber } from '../../../redux/reducers/arrayInfo';\r\nimport Resize from './Bars/Bars';\r\n\r\nclass Body extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setArray(resetArray(this.props.arrayInfo.height,this.props.arrayInfo.arrayLength));\r\n    setTimeout(()=>{\r\n      this.searchNumber();\r\n    },100)\r\n  } \r\n\r\n  componentDidUpdate(){\r\n    this.searchNumberCheck();\r\n  }\r\n\r\n\r\n\r\n\r\n  searchNumber(){\r\n    this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n  }\r\n\r\n  searchNumberCheck(){\r\n    if(this.props.arrayInfo.array.length === 0) return;\r\n    if(this.props.arrayInfo.searchNumber === 0) return;\r\n    if(!this.props.arrayInfo.array.includes(this.props.arrayInfo.searchNumber))\r\n    {\r\n      this.searchNumber();\r\n      colorReset(this.props.arrayInfo.arrayLength);\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    return      (\r\n      <div className =\"hero-body\">\r\n        <div className= \"container\">\r\n          <Resize />\r\n      </div>\r\n     </div>\r\n\r\n    );\r\n  }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n   return {\r\n     arrayInfo: state.arrayInfo\r\n   }\r\n }\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    setArray,\r\n    setSearchNumber\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Body)\r\n","import './App.css';\nimport Header from './program/Components/Header/header';\nimport Body from './program/Components/body/body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore} from \"@reduxjs/toolkit\";\r\nimport count from \"./reducers/count\";\r\nimport arrayInfo from \"./reducers/arrayInfo\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        counter: count,\r\n        arrayInfo: arrayInfo\r\n    }\r\n});","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n    typography:{\r\n        fontFamily:['\"Open Sans\"', 'sans-serif'].join(',')\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport theme from './font.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n      <ThemeProvider theme={theme}>\n      <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}