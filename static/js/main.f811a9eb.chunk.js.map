{"version":3,"sources":["redux/reducers/arrayInfo.js","redux/reducers/count.js","program/Algorithms/search/binary.js","program/Algorithms/search/jump.js","program/Algorithms/search/fibonacci.js","program/Algorithms/search/interpolation.js","program/Components/Header/slider/slider.jsx","program/Algorithms/sort/merge/mergeSort.js","program/Components/Functions/animations.js","program/Components/Functions/colorReset.js","program/Components/Functions/randomNum.js","program/Components/Functions/reset.js","redux/reducers/running.js","program/Algorithms/sort/bubble/bubbleSort.js","program/Algorithms/sort/quick/quickSort.js","program/Algorithms/sort/heap/heapSort.js","program/Components/Header/header.jsx","program/Algorithms/search/linear.js","program/Components/body/Bars/Bars.jsx","program/Components/body/body.jsx","App.js","reportWebVitals.js","redux/store.js","font.js","index.js"],"names":["arrayInfoSlice","createSlice","name","initialState","arrayLength","height","array","searchNumber","sorted","lastArray","searchCheck","reducers","setLength","state","payload","setHeight","setArray","setSearchNumber","setSortedStatus","setSortCheck","actions","countSlice","comparisonCount","incrementCount","resetCount","getBinarySearchAnimations","animations","length","start","end","middle","Math","floor","push","doBinary","getJumpSearchAnimations","n","step","sqrt","blockStart","currentStep","min","doJump","getFibonacciSearchAnimations","fibMMm2","fibMMm1","fibM","offset","i","doFibonacci","getInterpolationSearchAnimations","current","found","doInterpolation","speed","theme","createTheme","direction","useStyles","makeStyles","slider","padding","spacing","fontSize","handleChange","event","value","ReverseSlider","props","sliderDisplay","classes","display","className","ThemeProvider","sx","width","textAlign","xs","md","Slider","defaultValue","max","size","track","style","color","onChange","SECONDARY_COLOR","PRIMARY_COLOR","returnArrayLength","setRunning","a","arrayBars","document","getElementsByClassName","mergeSort","Promise","resolve","reject","merge","arr","l","m","r","n1","n2","L","Array","R","j","k","barOneStyle","barTwoStyle","barThreeStyle","backgroundColor","waitTime","parseInt","interval","setTimeout","HIGHLIGHT","SEARCH_COLOR","barIdx","barStyle","colorReset","randomNum","random","resetArray","bars","auxArray","runningSlice","running","bubbleSort","swapped","len","barTwoIdx","quickSort","swap","leftIndex","rightIndex","temp","partition","left","right","pivot","index","heapSort","buildMaxHeap","heapify","heap","rightChild","leftChild","firstItemIndex","lastItemIndex","lastElement","Header","arrayInfo","mode","modeSearch","modeSort","buttonDisabled","this","setState","type","mainArray","doLinear","getLinearSearchAnimations","sortArray","searchAnimation","then","res","afterAnimation","slice","sort","b","beforeAnimation","completeMergeSort","completeBubbleSort","completeQuickSort","completeHeapSort","change","COUNT","counter","componentsDisplay","initialButtons","Box","flexGrow","AppBar","position","Toolbar","Typography","variant","align","Button","onClick","changeMode","disabled","reset","component","modeChoice","sortAnimation","refreshSearch","Component","connect","headerInfo","Resize","realBars","useSelector","dispatch","useDispatch","useState","window","innerWidth","setSize","useEffect","addEventListener","handleResize","removeEventListener","useWindowSize","barsCalc","update","arraySort","arrayResize","map","idx","Body","searchNumberCheck","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","count","typography","fontFamily","join","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.f811a9eb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const arrayInfoSlice = createSlice({\r\n    name: 'arrayInfo',\r\n    initialState: {\r\n        arrayLength: 310,\r\n        height: 730,\r\n        array: [],\r\n        searchNumber: 0,\r\n        sorted: false,\r\n        lastArray: [],\r\n        searchCheck: false,\r\n    },\r\n    reducers: {\r\n      setLength: (state, {payload}) => {\r\n        state.arrayLength = payload;\r\n      },\r\n      setHeight: (state, {payload}) => {\r\n        state.height = payload; \r\n      },\r\n      setArray: (state, {payload}) => {\r\n        state.array = payload;\r\n      },\r\n      setSearchNumber: (state, {payload}) => {\r\n        state.searchNumber = payload; \r\n      },\r\n      setSortedStatus: (state, {payload}) => {\r\n        state.sorted = payload; \r\n      },\r\n      setSortCheck: (state,{payload}) => {\r\n        state.searchCheck = payload;\r\n      }\r\n    },\r\n  })\r\n\r\nexport const { setLength, setHeight, setArray, setSearchNumber, setSortedStatus, setSortCheck} = arrayInfoSlice.actions\r\n\r\n\r\nexport default arrayInfoSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const countSlice = createSlice({\r\n    name: 'count ',\r\n    initialState: {\r\n        comparisonCount: 0,\r\n    },\r\n    reducers: {\r\n      incrementCount: state => {\r\n        state.comparisonCount += 1;\r\n      },\r\n      resetCount: state =>{\r\n        state.comparisonCount = 0;\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { incrementCount, resetCount } = countSlice.actions;\r\n\r\n\r\n\r\n  export default countSlice.reducer","export function getBinarySearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <=1) return array; \r\n    doBinary(array,animations,searchNumber)\r\n    return animations; \r\n  }\r\n  \r\n  function doBinary(\r\n    array,\r\n    animations,\r\n    searchNumber,\r\n  )\r\n  {\r\n    let start = 0;\r\n    let end = array.length - 1;\r\n  \r\n    while (start <= end) {\r\n        let middle = Math.floor((start + end) / 2);\r\n        animations.push([middle]);\r\n  \r\n        if (array[middle] === searchNumber) {\r\n           return animations;\r\n        } else if (array[middle] < searchNumber) {\r\n            start = middle + 1;\r\n        } else {\r\n            end = middle - 1;\r\n        }\r\n    }\r\n    return animations;\r\n  \r\n  }","export function getJumpSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doJump(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doJump(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n    let n = array.length;\r\n    const step = Math.floor(Math.sqrt(n));\r\n  \r\n      let blockStart = 0, currentStep = step;\r\n  \r\n      while (array[Math.min(currentStep, n) - 1] < searchNumber)\r\n      {\r\n          blockStart = currentStep;\r\n          currentStep += step;\r\n      animations.push([blockStart])\r\n  \r\n          if (blockStart >= n)\r\n              return animations;\r\n      }\r\n    animations.push([Math.min(currentStep, n) - 1])\r\n  \r\n      while (array[blockStart] < searchNumber)\r\n      {\r\n          blockStart++;\r\n          animations.push([blockStart])\r\n  \r\n          if (blockStart === Math.min(currentStep, n))\r\n              return animations;\r\n      }\r\n  \r\n      if (array[blockStart] === searchNumber){\r\n          return animations\r\n    }\r\n      else{\r\n          return animations;\r\n    }\r\n  \r\n  }","export function getFibonacciSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doFibonacci(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n  \r\n  function doFibonacci(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n  let n = array.length;\r\n  let fibMMm2 = 0; \r\n  let fibMMm1 = 1; \r\n  let fibM = fibMMm2 + fibMMm1;\r\n  \r\n  while (fibM < n)\r\n  {\r\n      fibMMm2 = fibMMm1;\r\n      fibMMm1 = fibM;\r\n      fibM = fibMMm2 + fibMMm1;\r\n  }\r\n  \r\n  let offset = -1;\r\n  \r\n  \r\n  while (fibM > 1)\r\n  {\r\n      \r\n      let i = Math.min(offset + fibMMm2, n-1);\r\n      animations.push([i]);\r\n  \r\n      if (array[i] < searchNumber)\r\n      {\r\n          fibM = fibMMm1;\r\n          fibMMm1 = fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n          offset = i;\r\n      }\r\n  \r\n      else if (array[i] > searchNumber)\r\n      {\r\n          fibM = fibMMm2;\r\n          fibMMm1 = fibMMm1 - fibMMm2;\r\n          fibMMm2 = fibM - fibMMm1;\r\n      }\r\n  \r\n      else{\r\n        return animations;\r\n      }\r\n  }\r\n  \r\n  if(fibMMm1 && array[n-1] === searchNumber){\r\n    animations.push([n-1]);\r\n    return animations\r\n  }\r\n  \r\n  return animations;\r\n  \r\n  \r\n  }","export function getInterpolationSearchAnimations(array,searchNumber){\r\n    const animations = []; \r\n    if(array.length<=1) return array;\r\n    doInterpolation(array,animations,searchNumber)\r\n    return animations;\r\n  }\r\n\r\nfunction doInterpolation(\r\n    array,\r\n    animations,\r\n    searchNumber\r\n)\r\n{\r\n    let current;\r\n    let length = array.length-1; \r\n    let start = 0; \r\n    let found = false; \r\n\r\n    if(0<= length && searchNumber >= array[start] && searchNumber <= array[length]){\r\n\r\n        while(!found){\r\n            current = start + Math.floor(((length-start) /(array[length]-array[start])) * (searchNumber-array[start]));\r\n            animations.push([current]);\r\n    \r\n            if(searchNumber === array[current]) \r\n            {\r\n            found = true; \r\n            return animations;\r\n            }\r\n\r\n    \r\n            if(array[current] < searchNumber) start = current+1;\r\n            if(array[current] > searchNumber) length = current-1; \r\n\r\n        }\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { Slider,Box} from \"@material-ui/core\";\r\nimport { createTheme, ThemeProvider, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport var speed = 200;\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  direction: \"rtl\",\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  slider:{\r\n    padding: theme.spacing(2),\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\n\r\nfunction handleChange(event,value){\r\n  speed = value; \r\n}\r\n\r\n\r\n\r\n\r\nfunction ReverseSlider (props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  let sliderDisplay;\r\n  if(props.display) sliderDisplay = 'inline-block';\r\n  else sliderDisplay = 'none';\r\n\r\n  return (\r\n    <div className ={classes.slider}>\r\n    <ThemeProvider theme={theme} >\r\n      <Box sx={{display:sliderDisplay}}>\r\n        <Box width = {200}  sx={{textAlign: 'center', display: {xs: 'none', md: 'block'}}}>\r\n          ANIMATION SPEED\r\n          <Slider \r\n            sx={{display:sliderDisplay}}\r\n            defaultValue={200}\r\n            min={20}\r\n            max={1000}\r\n            size =\"medium\"\r\n            track=\"inverted\"\r\n            style={{color: 'rgb(211,211,211)'}}\r\n            onChange= {handleChange}\r\n          >\r\n          </Slider>\r\n        </Box>\r\n      </Box>\r\n      </ThemeProvider>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ReverseSlider;","import '../../../Components/body/body.css';\r\nimport {speed} from '../../../Components/Header/slider/slider'\r\n\r\nconst SECONDARY_COLOR = 'red';\r\nconst PRIMARY_COLOR = 'black'\r\n\r\nexport async function completeMergeSort(array,setArray,returnArrayLength,setRunning){\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    //driver code\r\n    setRunning(true);\r\n    try{\r\n      await mergeSort([...array],0,returnArrayLength()-1,setArray,returnArrayLength,arrayBars)\r\n    }catch(e){\r\n      return true\r\n    }\r\n    setRunning(false);\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        resolve();\r\n    })\r\n}\r\n\r\n\r\nasync function merge(arr, l, m, r,setArray,returnArrayLength,arrayBars)\r\n{\r\n    let n1 = m - l + 1;\r\n    let n2 = r - m;\r\n  \r\n    let L = new Array(n1); \r\n    let R = new Array(n2);\r\n  \r\n    for (let i = 0; i < n1; i++)\r\n        L[i] = arr[l + i];\r\n    for (let j = 0; j < n2; j++)\r\n        R[j] = arr[m + 1 + j];\r\n  \r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n\r\n    while (i < n1 && j < n2) {\r\n      if(l+i >= returnArrayLength() || m+j>= returnArrayLength()) break;\r\n      let barOneStyle = arrayBars[l+i].style\r\n      let barTwoStyle = arrayBars[m+j].style\r\n      let barThreeStyle = arrayBars[k].style\r\n      barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n      barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        if (L[i] <= R[j]) {\r\n            arr[k] = L[i];\r\n            barThreeStyle.height = `${L[i]}px`\r\n            i++;\r\n        }\r\n        else {\r\n            arr[k] = R[j];\r\n            barThreeStyle.height = `${R[j]}px`\r\n            j++;\r\n        }\r\n        setArray([...arr]);\r\n        k++;\r\n        await waitTime(speed/2)\r\n        barOneStyle.backgroundColor = PRIMARY_COLOR\r\n        barTwoStyle.backgroundColor = PRIMARY_COLOR\r\n    }\r\n  \r\n    while (i < n1) {\r\n        arr[k] = L[i];\r\n        i++;\r\n        k++;\r\n    }\r\n  \r\n    while (j < n2) {\r\n        arr[k] = R[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n    return new Promise((resolve)=>{\r\n      resolve();\r\n    })\r\n}\r\n  \r\nasync function mergeSort(arr,l, r,setArray,returnArrayLength,arrayBars){\r\n    if(l>=r){\r\n        return new Promise((resolve)=>{\r\n          resolve();\r\n        });\r\n    }\r\n    let m =l+ parseInt((r-l)/2);\r\n    await mergeSort(arr,l,m,setArray,returnArrayLength,arrayBars);\r\n    await mergeSort(arr,m+1,r,setArray,returnArrayLength,arrayBars);\r\n    await merge(arr,l,m,r,setArray,returnArrayLength,arrayBars);\r\n}\r\n\r\nasync function waitTime(interval){\r\n  return new Promise((resolve)=>{\r\n    setTimeout(()=>{\r\n      resolve();\r\n    },interval)\r\n  })\r\n}","import '../body/body.css';\r\nimport { speed } from '../Header/slider/slider';\r\n\r\nconst HIGHLIGHT = 'orange'; \r\nconst SEARCH_COLOR = '#2AFF00';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport async function searchAnimation(animations,setRunning, incrementCount, returnArrayLength){\r\n\r\n  setRunning(true);\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    const barIdx = animations[i];\r\n    try{\r\n      if(animations[i] < returnArrayLength()) \r\n      {\r\n        const barStyle = arrayBars[barIdx].style;\r\n        const color = i+1 === animations.length ? SEARCH_COLOR : SECONDARY_COLOR;\r\n  \r\n        await waitTime(speed/2)\r\n        barStyle.backgroundColor = HIGHLIGHT;\r\n        incrementCount();\r\n        await waitTime(speed/2);\r\n        barStyle.backgroundColor = color;\r\n      }\r\n    }catch(e){\r\n      return true\r\n    }\r\n  }\r\n\r\n  setRunning(false)\r\n  return new Promise((resolve)=>{\r\n    resolve();\r\n  })\r\n}\r\n\r\nasync function waitTime(interval){\r\n  return new Promise((resolve)=>{\r\n    setTimeout(()=>{\r\n      resolve();\r\n    },interval)\r\n  })\r\n}\r\n","const PRIMARY_COLOR = 'black';\r\n\r\nexport function colorReset(){\r\n  const arrayBars = document.getElementsByClassName('array-bar');\r\n  for(let i = 0;i < arrayBars.length;i++){\r\n    const barStyle = arrayBars[i].style;\r\n    barStyle.backgroundColor = PRIMARY_COLOR;\r\n  }\r\n  \r\n  }\r\n  ","export function randomNum(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }","import { randomNum } from \"./randomNum\";\r\n\r\nexport function resetArray(max,bars) {\r\n    const auxArray = [];\r\n    for (let i = 0; i < bars; i++) {\r\n      auxArray.push(randomNum(1, max))\r\n    }\r\n    return auxArray;\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const runningSlice = createSlice({\r\n    name: 'running ',\r\n    initialState:{\r\n        running: false,\r\n    },\r\n    reducers: {\r\n      setRunning: (state ,{payload})=>{\r\n        state.running = payload;\r\n      },\r\n    },\r\n  })\r\n\r\n  export const { setRunning } = runningSlice.actions;\r\n\r\n  export default runningSlice.reducer","import '../../../Components/body/body.css'\r\nimport {speed} from '../../../Components/Header/slider/slider';\r\n\r\nconst SECONDARY_COLOR = 'red';\r\nconst PRIMARY_COLOR = 'black'\r\n//bubble sort changed to be asynchronous due to performance issues (website freezes for a few seconds when bubble sort started)\r\n\r\nexport async function completeBubbleSort(array,setArray,returnArrayLength,setRunning){\r\n    setRunning(true)\r\n    try{\r\n        await bubbleSort(array,setArray,returnArrayLength)\r\n    }catch(e){\r\n        return true\r\n    }\r\n    setRunning(false)\r\n    return new Promise((resolve)=>{resolve()})\r\n}\r\n\r\nasync function bubbleSort(array,setArray, returnArrayLength){\r\n    let swapped;\r\n    do {\r\n        swapped = false;\r\n        //define array bars\r\n        let len = (returnArrayLength()<array.length) ? returnArrayLength() : array.length;\r\n        const arrayBars = document.getElementsByClassName('array-bar')\r\n        for (let i = 0; i < len; i++) {\r\n            len = (returnArrayLength()<array.length) ? returnArrayLength() : array.length;\r\n            //define array bars one and 2\r\n            const barOneIdx = i;\r\n            const barTwoIdx = (i === len-1) ? i:i+1;\r\n            const barOneStyle = arrayBars[barOneIdx].style\r\n            const barTwoStyle = arrayBars[barTwoIdx].style\r\n            //change colours of the both\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n            barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n            if (array[i] >  array[i + 1]) {\r\n                //swap values of these arrays.\r\n                barOneStyle.height = `${array[i+1]}px`\r\n                barTwoStyle.height = `${array[i]}px`\r\n                let current = array[i];\r\n                array[i] = array[i + 1];\r\n                array[i + 1] = current;\r\n                swapped = true;\r\n                setArray([...array]);\r\n            }\r\n            await waitTime(speed/2) //waits for timer to continue loop.\r\n            //revert the colours.\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR\r\n            barTwoStyle.backgroundColor = PRIMARY_COLOR\r\n        }\r\n    } while (swapped);\r\n    return new Promise((resolve)=>{\r\n        resolve();\r\n    })\r\n}\r\n\r\nasync function waitTime(interval){\r\n    return new Promise((resolve)=> {\r\n      setTimeout(()=>{\r\n        resolve()\r\n      },interval)\r\n    })\r\n}","import '../../../Components/body/body.css';\r\nimport {speed} from '../../../Components/Header/slider/slider'\r\n\r\nconst SECONDARY_COLOR = 'red';\r\nconst PRIMARY_COLOR = 'black'\r\n\r\nexport async function completeQuickSort(array,setRunning, returnArrayLength, setArray){\r\n    const arrayBars = document.getElementsByClassName('array-bar')\r\n    setRunning(true)\r\n    try{\r\n        await quickSort(array,0,array.length-1,returnArrayLength,setArray, arrayBars)\r\n    }catch(e){\r\n        return true\r\n    }\r\n    setRunning(false)\r\n    return new Promise((resolve)=>{\r\n        resolve();\r\n    })\r\n}\r\n\r\nfunction swap(array, leftIndex, rightIndex){\r\n    let temp = array[leftIndex];\r\n    array[leftIndex] = array[rightIndex];\r\n    array[rightIndex] = temp;\r\n}\r\n\r\n\r\nasync function partition(array, left, right, returnArrayLength, setArray, arrayBars) {\r\n    let pivot   = array[Math.floor((right + left) / 2)], \r\n        i = left, \r\n        j = right; \r\n    while (i <= j) {\r\n        let barOneStyle;\r\n        let barTwoStyle;\r\n        while (array[i] < pivot) {\r\n            if(i>=returnArrayLength()) break;\r\n            barOneStyle = arrayBars[i].style\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR\r\n            await waitTime(speed/2)\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n            i++;\r\n        }\r\n        while (array[j] > pivot) {\r\n            if(j>=returnArrayLength()) break\r\n            barOneStyle = arrayBars[j].style\r\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n            await waitTime(speed/2)\r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n            j--;\r\n        }\r\n        if (i <= j) {\r\n            if(j<returnArrayLength() && i <returnArrayLength())\r\n            {\r\n                barOneStyle = arrayBars[i].style\r\n                barTwoStyle = arrayBars[j].style\r\n                barOneStyle.backgroundColor = SECONDARY_COLOR\r\n                barTwoStyle.backgroundColor = SECONDARY_COLOR\r\n                await waitTime(speed/2)\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR\r\n                barOneStyle.height = `${array[j]}px`\r\n                barTwoStyle.height = `${array[i]}px`\r\n            }\r\n            swap(array, i, j);\r\n            setArray([...array])\r\n            i++;\r\n            j--;\r\n        }\r\n    }\r\n    return new Promise((resolve)=>{\r\n        resolve(i)\r\n    })\r\n}\r\n\r\n\r\nasync function quickSort(array, left, right,returnArrayLength,setArray, arrayBars ) {\r\n    let index;\r\n    if (array.length > 1) {\r\n        index = await partition(array, left, right, returnArrayLength, setArray, arrayBars);\r\n        if (left < index - 1) { \r\n            await quickSort(array, left, index - 1, returnArrayLength, setArray, arrayBars);\r\n        }\r\n        if (index < right) { \r\n            await quickSort(array, index, right, returnArrayLength, setArray, arrayBars);\r\n        }\r\n    }\r\n    return new Promise((resolve)=>{\r\n        resolve();\r\n    });\r\n}\r\n\r\nasync function waitTime(interval){\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve();\r\n        }, interval)\r\n    })\r\n}","import '../../../Components/body/body.css';\r\nimport {speed} from '../../../Components/Header/slider/slider'\r\n\r\nconst SECONDARY_COLOR = 'red';\r\nconst PRIMARY_COLOR = 'black'\r\n\r\nexport async function completeHeapSort(array,setRunning,returnArrayLength,setArray){\r\n    const arrayBars = document.getElementsByClassName('array-bar')\r\n    setRunning(true);\r\n    try{\r\n      await heapSort(array,returnArrayLength,setArray,arrayBars)\r\n    }catch(e){\r\n        return false;\r\n    }\r\n    setRunning(false);\r\n\r\n    return new Promise((resolve)=>resolve())\r\n}\r\n\r\nconst buildMaxHeap = async(arr,returnArrayLength,setArray,arrayBars) => {\r\n    // Get index of the middle element\r\n    let i = Math.floor(arr.length / 2 - 1);\r\n  \r\n    // Build a max heap out of\r\n    // All array elements passed in\r\n    while (i >= 0) {\r\n      await heapify(arr, i, arr.length,returnArrayLength,setArray,arrayBars);\r\n      i--\r\n    }\r\n\r\n    return new Promise((resolve)=> resolve())\r\n  }\r\n  \r\n  const heapify = async(heap, i, max, returnArrayLength,setArray, arrayBars) => {\r\n    let index;\r\n    let leftChild;\r\n    let rightChild;\r\n  \r\n    while (i < max) {\r\n      index = i;\r\n  \r\n      // Get the left child index \r\n      // Using the known formula\r\n      leftChild = 2 * i + 1;\r\n      \r\n      // Get the right child index \r\n      // Using the known formula\r\n      rightChild = leftChild + 1;\r\n  \r\n      // If the left child is not last element \r\n      // And its value is bigger\r\n      if (leftChild < max && heap[leftChild] > heap[index]) {\r\n        index = leftChild;\r\n      }\r\n  \r\n      // If the right child is not last element \r\n      // And its value is bigger\r\n      if (rightChild < max && heap[rightChild] > heap[index]) {\r\n        index = rightChild;\r\n      }\r\n  \r\n      // If none of the above conditions is true\r\n      // Just return\r\n      if (index === i) {\r\n        return;\r\n      }\r\n  \r\n      // Else swap elements\r\n      await swap(heap, i, index,setArray, arrayBars, returnArrayLength);\r\n  \r\n      // Continue by using the swapped index\r\n      i = index;\r\n    }\r\n\r\n    return new Promise((resolve)=> resolve())\r\n  }\r\n  \r\n  const swap = async(arr, firstItemIndex, lastItemIndex,setArray,arrayBars, returnArrayLength) => {\r\n    const temp = arr[firstItemIndex];\r\n\r\n    if(lastItemIndex >= returnArrayLength()) return;\r\n\r\n\r\n    const barOneStyle = arrayBars[firstItemIndex].style\r\n    const barTwoStyle = arrayBars[lastItemIndex].style;\r\n    barOneStyle.backgroundColor = SECONDARY_COLOR\r\n    barTwoStyle.backgroundColor = SECONDARY_COLOR\r\n    await waitTime(speed/2)\r\n    barOneStyle.height = `${arr[firstItemIndex]}px`\r\n    barTwoStyle.height = `${arr[lastItemIndex]}px`\r\n    barOneStyle.backgroundColor = PRIMARY_COLOR\r\n    barTwoStyle.backgroundColor = PRIMARY_COLOR\r\n  \r\n    // Swap first and last items in the array\r\n    arr[firstItemIndex] = arr[lastItemIndex];\r\n    arr[lastItemIndex] = temp;\r\n    setArray([...arr]);\r\n\r\n    return new Promise((resolve)=>resolve())\r\n  }\r\n  \r\n  const heapSort = async(arr, returnArrayLength,setArray, arrayBars) => {\r\n    // Build max heap\r\n    await buildMaxHeap(arr,returnArrayLength,setArray,arrayBars);\r\n  \r\n    // Get the index of the last element\r\n    let lastElement = arr.length - 1;\r\n  \r\n    // Continue heap sorting until we have\r\n    // One element left\r\n    while (lastElement > 0) {\r\n      await swap(arr, 0, lastElement,setArray, arrayBars,returnArrayLength);\r\n      await heapify(arr, 0, lastElement, returnArrayLength,setArray, arrayBars);\r\n      lastElement--\r\n    }\r\n    \r\n    // Return sorted array\r\n    return new Promise((resolve)=>resolve());\r\n  }\r\n\r\nasync function waitTime(interval){\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve()\r\n        },interval);\r\n    })\r\n}","import React, { Component} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { setArray, setSortedStatus, setSearchNumber } from '../../../redux/reducers/arrayInfo';\r\nimport { incrementCount, resetCount} from '../../../redux/reducers/count';\r\nimport { getBinarySearchAnimations } from '../../Algorithms/search/binary.js';\r\nimport {getLinearSearchAnimations} from '../../Algorithms/search/linear.js'\r\nimport {getJumpSearchAnimations} from '../../Algorithms/search/jump.js';\r\nimport {getFibonacciSearchAnimations} from '../../Algorithms/search/fibonacci.js';\r\nimport { getInterpolationSearchAnimations } from '../../Algorithms/search/interpolation';\r\nimport { completeMergeSort } from '../../Algorithms/sort/merge/mergeSort';\r\nimport {searchAnimation} from '../Functions/animations.js'\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { setRunning } from '../../../redux/reducers/running';\r\nimport { connect } from 'react-redux';\r\nimport ReverseSlider from './slider/slider';\r\nimport {completeBubbleSort } from '../../Algorithms/sort/bubble/bubbleSort.js';\r\nimport {completeQuickSort} from '../../Algorithms/sort/quick/quickSort'\r\nimport {completeHeapSort} from '../../Algorithms/sort/heap/heapSort'\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n      this.state = {\r\n        mode: 'none',\r\n        modeSearch: 'none',\r\n        modeSort: 'none',\r\n        buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n\r\n  componentWillUnmount(){\r\n    this.setState({modeSort: 'none'})\r\n    this.setState({modeSearch: 'none'})\r\n    this.props.setSortedStatus(false);\r\n    this.props.resetCount();\r\n  }\r\n\r\n  searchAnimation(type){\r\n    let animations;\r\n    switch(type){\r\n      case 1:\r\n        animations = getLinearSearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber)\r\n        break;\r\n      case 2:\r\n        animations = getFibonacciSearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber);\r\n        break;\r\n      case 3:\r\n        animations = getBinarySearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber);\r\n        break;\r\n      case 4:\r\n        animations = getJumpSearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber);\r\n        break;\r\n      case 5:\r\n        animations = getInterpolationSearchAnimations(this.props.arrayInfo.array,this.props.arrayInfo.searchNumber);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    colorReset()\r\n    this.props.resetCount();\r\n    this.setState({buttonDisabled : true});\r\n    if(type >1 && type <6) this.sortArray();\r\n    searchAnimation(animations,this.props.setRunning,this.props.incrementCount,this.returnArrayLength).then((res)=>{\r\n      if(res) return\r\n      this.afterAnimation();\r\n    })\r\n  }\r\n\r\n  afterAnimation(){\r\n    this.setState({buttonDisabled : false});\r\n    if(this.state.mode === 'sort') this.props.setSortedStatus(true);\r\n  }\r\n\r\n  beforeAnimation(){\r\n    this.setState({buttonDisabled: true});\r\n    colorReset();\r\n  }\r\n\r\n\r\n  reset(){\r\n    colorReset(this.props.arrayInfo.arrayLength-1);\r\n    this.props.setArray(resetArray(this.props.arrayInfo.height,this.props.arrayInfo.arrayLength));\r\n    this.props.setSortedStatus(false);\r\n    setTimeout(()=>{\r\n      this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n    })\r\n  }\r\n\r\n  refreshSearch(){\r\n    this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n  }\r\n\r\n  sortArray(){\r\n    this.props.setArray(arraySort(this.props.arrayInfo.array));\r\n    this.props.setSortedStatus(true);\r\n  }\r\n\r\n\r\n  sortAnimation(type){\r\n    switch(type){\r\n      case 1:\r\n        this.beforeAnimation();\r\n        completeMergeSort([...this.props.arrayInfo.array],this.props.setArray,this.returnArrayLength,this.props.setRunning)\r\n        .then((res)=>{\r\n          if(res) return\r\n          this.afterAnimation()\r\n        })\r\n        break;\r\n      \r\n      case 2:\r\n        this.beforeAnimation();\r\n        completeBubbleSort([...this.props.arrayInfo.array],this.props.setArray,this.returnArrayLength,this.props.setRunning)\r\n        .then((res)=>{\r\n          if(res) return\r\n          this.afterAnimation();\r\n        })\r\n        break;\r\n      \r\n      case 3:\r\n        this.beforeAnimation();\r\n        completeQuickSort([...this.props.arrayInfo.array],this.props.setRunning,this.returnArrayLength,this.props.setArray)\r\n        .then((res)=>{\r\n          if(res) return\r\n          this.afterAnimation();\r\n        })\r\n        break;\r\n\r\n      case 4:\r\n        this.beforeAnimation()\r\n        completeHeapSort([...this.props.arrayInfo.array],this.props.setRunning,this.returnArrayLength,this.props.setArray)\r\n        .then((res)=>{\r\n          if(res) return\r\n          this.afterAnimation()\r\n        })\r\n        break\r\n      \r\n      default:\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  modeChoice(mode,change){\r\n    switch(mode){\r\n      case 1:\r\n        this.setState({mode: 'search',modeSearch:'inline-block'})\r\n        break;\r\n      case 2:\r\n        this.setState({mode:'sort',modeSort:'inline-block'})\r\n        break;\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  changeMode(){\r\n    if(this.state.mode === 'sort') this.setState({mode:'search',modeSearch:'inline-block',modeSort:'none'})\r\n    else this.setState({mode:'sort', modeSearch: 'none', modeSort:'inline-block'})\r\n  }\r\n\r\n  returnArrayLength = () => this.props.arrayInfo.arrayLength\r\n\r\n\r\n  render(){\r\n    let COUNT = this.props.counter.comparisonCount;\r\n\r\n    let sliderDisplay = false;\r\n    let componentsDisplay = 'none';\r\n    let initialButtons = 'inline-block'\r\n    if(this.state.mode === 'search' || this.state.mode === 'sort'){\r\n      sliderDisplay = true;\r\n      componentsDisplay = 'inline-block';\r\n      initialButtons = 'none';\r\n    } \r\n\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" align=\"left\">\r\n            <Button color = \"inherit\" style ={{display:componentsDisplay}} onClick={()=>{this.changeMode()}}> {this.state.mode} </Button>\r\n            <Button color=\"inherit\" style={{display: componentsDisplay}} disabled = {this.state.buttonDisabled} onClick = {()=> this.reset()}>refresh array</Button>\r\n            <Button color = \"inherit\" style={{display: this.state.modeSearch}} disabled = {this.state.buttonDisabled} onClick = {()=> this.sortArray()}> sort array</Button>\r\n            </Typography>\r\n            <Typography style={{display: this.state.modeSearch}} sx={{fontSize: 14, display: {xs: 'none', md:'block'}}}>\r\n            COMPARISONS: {COUNT}\r\n            </Typography>\r\n            <Typography variant=\"h6\"  style={{display: this.state.modeSearch}} component=\"div\" sx={{ flexGrow: 1}}  textAlign = \"center\" align=\"center\">\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.searchAnimation(1)}>linear</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.searchAnimation(2)}>fibonacci</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled}  onClick = {()=> this.searchAnimation(3)}>binary</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.searchAnimation(4)}>jump</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.searchAnimation(5)}>interpolation</Button>\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{display:initialButtons}} component=\"div\" sx={{flexGrow:1}} textAlign = \"center\" align=\"center\">\r\n              <Button color=\"inherit\" onClick ={()=> this.modeChoice(1)}>Search</Button>\r\n              <Button color=\"inherit\" onClick = {()=>this.modeChoice(2)}>Sort</Button>\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{display: this.state.modeSort}} component=\"div\" sx={{ flexGrow: 1}}  textAlign = \"center\" align=\"center\">\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.sortAnimation(1) }>merge sort</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.sortAnimation(2) }>bubble sort</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.sortAnimation(3) }>quick sort</Button>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.sortAnimation(4) }>heap sort</Button>\r\n            </Typography>\r\n            <ReverseSlider display={sliderDisplay}/>\r\n            <Typography variant =\"caption\" align=\"right\" style={{display: this.state.modeSearch}}>\r\n            <Button color=\"inherit\" disabled = {this.state.buttonDisabled} onClick = {()=> this.refreshSearch()}>refresh search number</Button>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n    arrayInfo: state.arrayInfo,\r\n    headerInfo: state.headerInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n return {\r\n   setArray,\r\n   setSearchNumber,\r\n   setSortedStatus,\r\n   incrementCount,\r\n   resetCount,\r\n   setRunning,\r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Header)\r\n\r\nfunction arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}\r\n","export function getLinearSearchAnimations(array,searchNumber){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    doLinear(array,animations,searchNumber);\r\n    return animations;\r\n  }\r\n  \r\n  function doLinear(\r\n    mainArray,\r\n    animations,\r\n    searchNumber\r\n  )\r\n  {\r\n   for(let i = 0; i < mainArray.length;i++){\r\n     if(mainArray[i] === searchNumber){\r\n       animations.push([i]);\r\n       return animations\r\n     }\r\n     else\r\n     {\r\n       animations.push([i]);\r\n      }\r\n      \r\n   }\r\n   return animations\r\n  \r\n  }","import React, {useState, useEffect} from \"react\";\r\nimport { setLength, setArray } from \"../../../../redux/reducers/arrayInfo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { randomNum } from \"../../Functions/randomNum\";\r\nimport '../body.css'\r\n\r\nconst PRIMARY_COLOR = 'black';\r\n\r\n\r\n\r\nfunction useWindowSize(){\r\n  const [size,setSize] = useState(window.innerWidth)\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize(window.innerWidth)\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize)\r\n  }, []);\r\n  return size; \r\n}\r\n\r\nfunction barsCalc(width){\r\n  const arrayLength = Math.floor(width/4.15);\r\n  return arrayLength;\r\n}\r\n\r\n\r\nfunction arrayResize(length,array,max,sorted,running){\r\n  if (running){\r\n    if(length < array.length){\r\n      let auxArray = [];\r\n      for(let i =0;i<length;i++) auxArray.push(array[i]);\r\n      return auxArray;\r\n    }\r\n    return array;\r\n  }\r\n    let auxArray = []; \r\n    const start = array.length+1; \r\n    if(array.length === 0)return array;\r\n    if(length>array.length){\r\n        auxArray = [...array];\r\n        for(let i =start-1;i<length-1;i++){\r\n          const temp = randomNum(5,max);\r\n          auxArray.push([temp]);\r\n        }\r\n    }else{\r\n        for(let i = 0;i<length;i++){\r\n          auxArray.push(array[i]);\r\n        }\r\n    }\r\n\r\n    if(sorted === true){\r\n      return arraySort(auxArray);\r\n    } else return auxArray;\r\n}\r\n\r\nfunction Resize(){\r\n\r\n  const realBars = useSelector((state)=>state.arrayInfo.arrayLength);\r\n  const dispatch = useDispatch();\r\n  const width = useWindowSize();\r\n  const max = useSelector((state)=> state.arrayInfo.height);\r\n  const bars = barsCalc(width);\r\n  let update = false;\r\n  const sorted = useSelector((state)=> state.arrayInfo.sorted);\r\n\r\n  const running = useSelector((state)=> state.running.running);\r\n\r\n  const array = arrayResize(bars,useSelector((state)=> state.arrayInfo.array),max,sorted,running)\r\n\r\n\r\n  if(array.length !== useSelector((state)=> state.arrayInfo.array.length)) update = true;\r\n  else update = false\r\n  if(running) update = false; \r\n\r\n  useEffect(()=>{\r\n    if(realBars !== bars ) dispatch(setLength(bars));\r\n    if(update) dispatch(setArray(array))\r\n  })\r\n  return(\r\n      <>\r\n      {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: PRIMARY_COLOR,\r\n                  height: `${value}px`,\r\n                }}>&nbsp;</div>\r\n            ))}\r\n      </>\r\n  )\r\n}\r\n\r\n\r\nexport default Resize\r\n\r\nfunction  arraySort(array) {\r\n\r\n  array = array.slice().sort((a, b) => a-b)\r\n  return array;\r\n\r\n}","import React, {Component} from 'react';\r\nimport './body.css';\r\nimport { connect } from 'react-redux';\r\nimport { resetArray } from '../Functions/reset';\r\nimport { randomNum } from '../Functions/randomNum';\r\nimport { colorReset } from '../Functions/colorReset';\r\nimport { setArray, setSearchNumber } from '../../../redux/reducers/arrayInfo';\r\nimport Resize from './Bars/Bars';\r\n\r\nclass Body extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setArray(resetArray(this.props.arrayInfo.height,this.props.arrayInfo.arrayLength));\r\n    setTimeout(()=>{\r\n      this.searchNumber();\r\n    },100)\r\n  } \r\n\r\n  componentDidUpdate(){\r\n    if(this.props.arrayInfo.searchCheck) this.searchNumberCheck();\r\n  }\r\n  \r\n\r\n\r\n\r\n  searchNumber(){\r\n    this.props.setSearchNumber(this.props.arrayInfo.array[randomNum(0,this.props.arrayInfo.arrayLength-1)]);\r\n  }\r\n\r\n  searchNumberCheck(){\r\n    if(this.props.arrayInfo.array.length === 0) return;\r\n    if(this.props.arrayInfo.searchNumber === 0) return;\r\n    if(!this.props.arrayInfo.array.includes(this.props.arrayInfo.searchNumber))\r\n    {\r\n      this.searchNumber();\r\n      colorReset(this.props.arrayInfo.arrayLength);\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    return      (\r\n          <Resize />\r\n    );\r\n  }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n   return {\r\n     arrayInfo: state.arrayInfo,\r\n     headerInfo: state.headerInfo,\r\n   }\r\n }\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    setArray,\r\n    setSearchNumber\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(Body)\r\n","import './App.css';\nimport Header from './program/Components/Header/header';\nimport Body from './program/Components/body/body';\n\nfunction App() {\n  return (\n    <div className = \"App\">\n    <Header></Header>\n    <Body></Body>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore} from \"@reduxjs/toolkit\";\r\nimport count from \"./reducers/count\";\r\nimport arrayInfo from \"./reducers/arrayInfo\";\r\nimport running from \"./reducers/running\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        counter: count,\r\n        arrayInfo: arrayInfo,\r\n        running: running,\r\n    }\r\n});","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n    typography:{\r\n        fontFamily:['\"Open Sans\"', 'sans-serif'].join(',')\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport theme from './font.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}